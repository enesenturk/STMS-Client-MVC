@using Microsoft.AspNetCore.Html;
@model NS.STMS.MVC.Models.ComponentModels.HtmlElementCompenents.PasswordInputDivComponentModel

<style>
	.form-floating > .form-control {
		padding-top: 1.2rem;
		padding-bottom: 0rem;
		height: 45px;
		font-size: 14px;
	}

	.form-floating > .floating-input-lbl {
		padding: 0.75rem .6rem;
		font-size: 14px;
		color: #A5A9AD;
	}

	.password-toggle-icon {
		position: absolute;
		top: 30px;
		right: 10px;
		transform: translateY(-50%);
		cursor: pointer;
	}

	.password-strength-bar {
		height: 2px;
		background-color: #ddd;
		overflow: hidden;
	}

	#strength-bar-fill {
		width: 0%;
		height: 100%;
		background-color: #4CAF50; /* Green color for strong */
	}
</style>

<div class="@Model.ContainerClasses">

	<div class="form-floating">
		<input id="PasswordInput" type="password" class="form-control password-inputs" maxlength="20" autocomplete="off">
		<label class="floating-input-lbl" for="PasswordInput">@Messages.Password</label>
		<div class="password-strength-bar">
			<div id="strength-bar-fill"></div>
		</div>
		<p id="PasswordInputError" class="input-error-message"></p>
		<span class="password-toggle-icon" onclick="togglePasswordVisibility()">
			<i class="mdi mdi-eye"></i>
		</span>
	</div>

</div>

@if (Model.ReenterPassword)
{

	<div class="@Model.ContainerClasses">

		<div class="form-floating">
			<input id="ReenterPasswordInput" type="password" class="form-control password-inputs" maxlength="20" autocomplete="off">
			<label class="floating-input-lbl" for="ReenterPasswordInput">@Messages.Reenter_Password</label>
		</div>

	</div>

}

<script>

	document.getElementById('PasswordInput').addEventListener('input', function () {

		var password = getInputVal('PasswordInput');
		var strength = getPasswordStrength(password);

		updateStrengthBar(strength);
	});

	document.getElementById('ReenterPasswordInput').addEventListener('input', function () {

		hideError('PasswordInput');
	});

	function isPasswordValid() {

		var reenterPasswordActive = "@Model.ReenterPassword";

		var password = getInputVal('PasswordInput');
		var strength = getPasswordStrength(password);

		if (strength != 5) {
			$('#PasswordInputError').text("@TextHelper.ToHtml(Messages.Please_Strong_Password)");
			return false;
		}

		if (reenterPasswordActive == "True") {

			var reenterPassword = getInputVal('ReenterPasswordInput');

			if (password != reenterPassword) {
				$('#PasswordInputError').text("@TextHelper.ToHtml(Messages.Passwords_Dont_Match)");
				return false;
			}
		}

		return true;
	}

	function getPasswordStrength(password) {

		var minLength = 6;

		var hasLongText = password.length >= minLength;
		var hasUpperCase = /[A-Z]/.test(password);
		var hasLowerCase = /[a-z]/.test(password);
		var hasDigit = /\d/.test(password);
		var hasSpecialChar = /[!@@#$%^&*()_+{}\[\]:;<>,.?~]/.test(password);

		var strength = 0;

		if (hasLongText) {
			strength++;
		}
		if (hasUpperCase) {
			strength++;
		}
		if (hasLowerCase) {
			strength++;
		}
		if (hasDigit) {
			strength++;
		}
		if (hasSpecialChar) {
			strength++;
		}

		return strength;
	}

	function updateStrengthBar(strength) {
		var strengthBarFill = document.getElementById('strength-bar-fill');
		var fillPercentage = (strength / 5) * 100;

		strengthBarFill.style.width = `${fillPercentage}%`;
	}

	function togglePasswordVisibility() {

		var icon = document.querySelector('.password-toggle-icon i');
		var passwordInputs = $('.password-inputs');

		passwordInputs.each(function (index, element) {

			var passwordInput = $(element).get(0);

			if (passwordInput.type === 'password') {

				passwordInput.type = 'text';
				icon.classList.remove('mdi-eye');
				icon.classList.add('mdi-eye-off');
			}
			else {

				passwordInput.type = 'password';
				icon.classList.remove('mdi-eye-off');
				icon.classList.add('mdi-eye');
			}
		});

	}

</script>