@model NS.STMS.MVC.Models.Admin.GradeLectures.AddGradeLecturesViewModel

@await Component.InvokeAsync("PageHeader", new { model = Model.PageHeader })

<div class="row col-12">

	@await Component.InvokeAsync("InputDropDownDiv", new
	{
	id = "GradeInput",
	key = @Messages.Grades,
	options = Model.Grades
	})

	@await Component.InvokeAsync("InputDropDownDiv", new
	{
	id = "LectureInput",
	key = @Messages.Lectures,
	options = Model.Lectures
	})

	@await Component.InvokeAsync("ProcessInputDiv", new
	{
	id = "CreateInput",
	text = @Messages.Create,
	btnClass = "btn-success",
	onClick = "createGradeLecture()"
	})

</div>

<script>

	function createGradeLecture() {

		var lectureId = getInputVal('LectureInput');
		var gradeId = getInputVal('GradeInput');

		var data = {
			LectureId: lectureId,
			GradeId: gradeId
		};

		var url = '/Admin/GradeLectures/Add';
		postJSonToController(url, data, createGradeLectureOnSuccess);

	}

	function createGradeLectureOnSuccess(resp) {

		stopLoading();

		switch (resp.Type) {

			case "E":
				toastrError(resp.Message);
				break;
			case "S":
				toastrSuccess();
				break;
			default:
				toastrError(anErrorOccurredMessage);
				break;
		}
	}

</script>